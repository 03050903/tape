package com.squareup.tape;

import com.squareup.tape.QueueFile;
import com.squareup.tape.QueueFile.ElementReader;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.lang.String;
import java.lang.System;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;

/*-[
  // Header for objectiveC code generated by j2objC
  #include "queuefile.h"
]-*/

public class QueueFileNative implements QueueFile {
  
  // NOTE: this object is accessed from native code.
  private ByteBuffer nativeObj;

  /**
   * Make SURE you call close() on every object, otherwise the native code will not free
   * associated resources (memory and file handle).
   * @param filename
   * @throws IOException
   */
  public QueueFileNative(String filename) throws IOException {
    // Stash value for native code to use later.
    nativeObj = nativeNew(filename);
  }

  private native ByteBuffer nativeNew(String filename) /*-[
    // objC code here
  ]-*/;

  public native int getFileLength() /*-[
    // objC code here
  ]-*/;

  public void add(byte[] data) throws IOException {
    add(data, 0, data.length);
  }
    
  public void add(byte[] data, int offset, int count)
      throws IOException {
    if (count + offset > data.length) {
      throw new IOException("Add attempted with count exceeding length" +
                            " of data array: " + (count + offset) +
                            " exceeds length " + data.length);
    }
    addUnchecked(data, offset, count);
  }

  private native void addUnchecked(byte[] data, int offset, int count);
                                
  public native boolean isEmpty() /*-[
    // objC code here
  ]-*/;

  public native byte[] peek() throws IOException /*-[
    // objC code here
  ]-*/;

  public void peek(ElementReader reader) throws IOException {
    
  }

  public void forEach(ElementReader reader) throws IOException {
  }

  public native int size() /*-[
    // objC code here
  ]-*/;

  public native void remove() throws IOException /*-[
    // objC code here
  ]-*/;

  public native void clear() throws IOException /*-[
    // objC code here
  ]-*/;

  public native void close() throws IOException /*-[
    // objC code here
  ]-*/;

  public native String toString() /*-[
    // objC code here
  ]-*/;

  private static native void initIDs();
  
  static {
    System.loadLibrary("c-tape-android-native");
    initIDs();
  }
}
